{
  "gitLessons": [
    {
      "LessonTitle": "Introdu√ß√£o ao Git",
      "Steps": [
        {
          "StepNumber": 1,
          "Description": "O que √© Git?",
          "Example": "",
          "Explanation": "O Git √© um tipo de software de computador conhecido como um sistema de controle de vers√£o. Isso ajuda as pessoas a acompanhar as altera√ß√µes feitas em seu c√≥digo de computador ou outros arquivos baseados em texto ao longo do tempo.\n\n√â como um livro de hist√≥rico para seus arquivos, permitindo que voc√™ veja quem fez altera√ß√µes, quais altera√ß√µes foram feitas e quando elas ocorreram."
        },
        {
          "StepNumber": 2,
          "Description": "Por que √© usado?",
          "Example": "",
          "Explanation": "Git √© usado para facilitar muito mais o trabalho em projetos com outras pessoas. Ele ajuda v√°rias pessoas a colaborar nos mesmos arquivos sem substituir acidentalmente o trabalho umas das outras.\n\nIsso tamb√©m permite que voc√™ experimente novas id√©ias sem se preocupar em arruinar o que voc√™ j√° fez.\n\nAl√©m disso, Git √© √≥timo para manter backups e gerenciar diferentes vers√µes de seus arquivos para que voc√™ sempre possa voltar ao estado anterior, se necess√°rio"
        },
        {
          "StepNumber": 3,
          "Description": "Installing Git",
          "Example": "git --version",
          "Explanation": "Go to the official Git website (https://git-scm.com/) and find the download section.\n\nChoose the version of Git that matches your computer's operating system (like Windows, macOS, or Linux).\n\nOnce the download is complete, open the downloaded file and follow the installation instructions.\n\nAfter the installation is done, you can verify that Git is installed by opening a terminal or command prompt and typing"
        },
        {
          "StepNumber": 4,
          "Description": "Configurando o Git no seu computador",
          "Example": "git config --global user.name 'Seu Nome'\ngit config --global user.email 'Seu ID de Email'",
          "Explanation": "Para usar o Git, primeiro voc√™ precisa configur√°-lo no seu computador, definindo seu nome de usu√°rio e endere√ßo de e-mail. Essa informa√ß√£o ser√° anexada a cada commit que voc√™ fizer no Git."
        },
        {
          "StepNumber": 5,
          "Description": "üòï O Git e o Github s√£o iguais?",
          "Example": "",
          "Explanation": "N√£o, Git e GitHub n√£o s√£o os mesmos, mas s√£o conceitos relacionados \n\nGit √© a principal tecnologia que gerencia o controle de vers√£o localmente.\n\nGitHub √© uma plataforma que torna f√°cil armazenar, compartilhar e colaborar em reposit√≥rios Git pela internet. Outras plataformas similares incluem GitLab e Bitbucket."
        }
      ]
    },
    {
      "LessonTitle": "Git B√°sico",
      "Steps": [
        {
          "StepNumber": 1,
          "Description": "Inicializando um projeto",
          "Example": "git init",
          "Explanation": "Depois de instalar o Git, o primeiro passo √© definir o controle de vers√£o para o seu projeto.\n\nAbra seu terminal de linha de comando ou Git Bash (se voc√™ estiver no Windows) e navegue at√© o diret√≥rio onde voc√™ deseja iniciar seu projeto.\n\nUse o seguinte comando para inicializar um novo reposit√≥rio Git"
        },
        {
          "StepNumber": 2,
          "Description": "Criando Arquivos e Adicionando Texto",
          "Example": "Ol√°, este √© o meu primeiro arquivo",
          "Explanation": "Voc√™ pode utilizar qualquer editor de texto que preferir, como Notepad,Vim,Sublime ou Visual Studio\n\nCrie um novo arquivo 'ol√°. xt' e ent√£o escrever o seguinte texto e salvar o arquivo"
        },
        {
          "StepNumber": 3,
          "Description": "Adicionar e Rastrear Arquivos",
          "Example": "git add hello.txt",
          "Explanation": "Depois de criar e editar o seu arquivo, √© hora de come√ßar a rastre√°-lo com Git. U\n\nPara fazer isso, use o comando 'git add <file name>'."
        },
        {
          "StepNumber": 4,
          "Description": "Verificando status",
          "Example": "git status",
          "Explanation": "A qualquer momento, voc√™ pode verificar o status do seu reposit√≥rio para ver quais arquivos s√£o rastreados, modificados ou organizados para o pr√≥ximo commit.\n\nO comando 'git status' fornece esta informa√ß√£o a voc√™."
        },
        {
          "StepNumber": 5,
          "Description": "Criando Commits",
          "Example": "git commit -m \"meu primeiro commit\"",
          "Explanation": "A commit in Git represents a snapshot of your project at a certain point in time.\n\nIt's a way to record your changes and provide a meaningful description of what you've done.\n\nTo make a commit, you use the following command"
        },
        {
          "StepNumber": 6,
          "Description": "E agora?",
          "Example": "",
          "Explanation": "üéâ Parab√©ns! Voc√™ cobriu o b√°sico do Git.\n\n√Ä medida que voc√™ continua sua jornada com o Git, voc√™ vai aprender mais sobre ramifica√ß√£o, fus√£o, etc.\n\nE n√£o se esque√ßa de que a documenta√ß√£o do Git e os tutoriais on-line s√£o excelentes recursos para aprofundar seu entendimento."
        }
      ]
    },
    {
      "LessonTitle": "Branches Git",
      "Steps": [
        {
          "StepNumber": 1,
          "Description": "O que √© um Git Branch?",
          "Example": "",
          "Explanation": "Uma ramifica√ß√£o Git √© uma linha separada de desenvolvimento que permite trabalhar em diferentes partes do seu projeto sem afetar a base de c√≥digo principal.\n\nIsso √© particularmente √∫til para colabora√ß√£o e gerenciamento de v√°rios recursos, corre√ß√µes de bugs ou experimentos simultaneamente.\n\nBranches ajudam a isolar as altera√ß√µes, tornando mais f√°cil a revis√£o, testar e integr√°-los de volta ao c√≥digo principal."
        },
        {
          "StepNumber": 2,
          "Description": "Criando uma filial",
          "Example": "git branch feature-login",
          "Explanation": "Para criar um novo branch, use o comando `git branch` seguido do nome do branch que voc√™ deseja criar."
        },
        {
          "StepNumber": 3,
          "Description": "Trocar branch",
          "Example": "git checkout feature-login",
          "Explanation": "Para mudar para o novo branch, use o comando `git checkout` ou `git switch` seguido pelo nome do branch."
        },
        {
          "StepNumber": 4,
          "Description": "[Shortcut] Criar e alternar a branch",
          "Example": "git checkout -b inscricao-de-recursos",
          "Explanation": "Para criar e mudar para o novo branch em um comando, use o `git checkout -b <branch-name>`."
        },
        {
          "StepNumber": 5,
          "Description": "Mesclando filial",
          "Example": "git checkout main\ngit merge feature-login",
          "Explanation": "Quando estiver satisfeito com as altera√ß√µes que fez em seu branch, √© hora de mesclar essas mudan√ßas de volta na base de c√≥digo principal.\n\nPara fazer isso, mude para o branch principal/mestre e use o comando `git merge`."
        },
        {
          "StepNumber": 6,
          "Description": "Excluindo uma filial",
          "Example": "git branch -d feature-login",
          "Explanation": "Certifique-se de ter feito merge de todas as altera√ß√µes do branch que deseja excluir antes de executar esse comando.\n\nPara excluir um branch, use o comando `git branch` seguido da op√ß√£o `-d`.\n\nSe voc√™ precisar excluir um branch, use a flag `-D` em vez de `-d`."
        }
      ]
    },
    {
      "LessonTitle": "Prepara√ß√£o Git",
      "Steps": [
        {
          "StepNumber": 1,
          "Description": "O que √© Git Staging",
          "Example": "",
          "Explanation": "O staging do Git √© o processo de prepara√ß√£o de um conjunto de altera√ß√µes a serem confirmadas no reposit√≥rio Git. U\n\nEle permite que voc√™ selecione apenas as mudan√ßas que deseja incluir no pr√≥ximo commit, em vez de fazer commit de todas as altera√ß√µes feitas no reposit√≥rio."
        },
        {
          "StepNumber": 2,
          "Description": "Adicionando mudan√ßas na √°rea de Staging Git",
          "Example": "git add arquivo1.txt arquivo 2.txt",
          "Explanation": "To add changes to the Git Staging Area, use the `git add` command followed by the names of the files you want to add.\n\nThis will stage the changes, which means they will be included in the next commit."
        },
        {
          "StepNumber": 3,
          "Description": "Visualizando Altera√ß√µes em Staging e N√£o Organizadas",
          "Example": "git diff\ngit diff --staged",
          "Explanation": "To view the changes you have made to the Git repository, use the `git diff` command.\n\nTo view only the staged changes, use the `git diff --staged` command. This will display a list of the changes that have been staged and are ready to be committed."
        },
        {
          "StepNumber": 4,
          "Description": "Removendo altera√ß√µes da √°rea de Staging",
          "Example": "git reset file1.txt",
          "Explanation": "To remove changes from the Git Staging Area, use the `git reset` command followed by the name of the file you want to remove.\n\nThis will remove the changes from the Staging Area, but they will still exist in the working tree."
        },
        {
          "StepNumber": 5,
          "Description": "Enviando Altera√ß√µes Staged",
          "Example": "git commit -m 'Mensagem de commit'",
          "Explanation": "Para confirmar as altera√ß√µes na √Årea de Staging Git para o reposit√≥rio Git, use o comando `git commit` seguido de uma mensagem de commit. U\n\nIsso ir√° criar um novo commit no registro do Git com as altera√ß√µes que voc√™ iniciou."
        }
      ]
    },
    {
      "LessonTitle": "GitHub",
      "Steps": [
        {
          "StepNumber": 1,
          "Description": "O que √© GitHub?",
          "Example": "",
          "Explanation": "GitHub is a web-based platform for version control and collaboration that uses Git.\n\nIt provides a centralized repository for projects, making it easier for teams to collaborate on code and track changes."
        },
        {
          "StepNumber": 2,
          "Description": "Criando uma conta no GitHub",
          "Example": "",
          "Explanation": "Para come√ßar a usar o GitHub, voc√™ precisa criar uma conta no GitHub visitando o site do GitHub e seguindo o processo de cadastro. Voc√™ ser√° solicitado a informar seu nome de usu√°rio, endere√ßo de e-mail e senha."
        },
        {
          "StepNumber": 3,
          "Description": "Criando um Novo Reposit√≥rio GitHub",
          "Example": "",
          "Explanation": "1. Fa√ßa login na sua conta do GitHub.\n\n2. Clique no √≠cone \"+\" no canto superior direito e selecione \"Novo reposit√≥rio\"\n\n3. Forne√ßa um nome para o seu reposit√≥rio, uma breve descri√ß√£o e escolha se ele √© p√∫blico (vis√≠vel para qualquer pessoa) ou privado (vis√≠vel apenas para os colaboradores)\n\n4. Selecione op√ß√µes adicionais se necess√°rio, como a inicializa√ß√£o do reposit√≥rio com um arquivo README\n\n5. Clique em \"Criar reposit√≥rio\""
        },
        {
          "StepNumber": 4,
          "Description": "Clonando um reposit√≥rio GitHub",
          "Example": "git clone <repository_link>",
          "Explanation": "Clonar um reposit√≥rio significa copiar seu conte√∫do para a m√°quina local. U\n\nIsso permite que voc√™ fa√ßa mudan√ßas, rastreie-as com o Git, e empurre essas altera√ß√µes de volta para o reposit√≥rio.\n\nPara clonar um reposit√≥rio do GitHub para a m√°quina local, use o comando `git clone` seguido pelo URL do reposit√≥rio GitHub.\n\n Exemplo: \"git clone https://github.com/firstcontributions/first-contributions.git\""
        },
        {
          "StepNumber": 5,
          "Description": "Fazendo altera√ß√µes e enviando para o GitHub",
          "Example": "git add .\ngit commit -m \"message\"\n\ngit push origin principal",
          "Explanation": "Once you've cloned a repository, you can make changes to the files just like you would with any other Git repository.\n\nAfter making changes, follow these steps to push your changes to GitHub.\n\nThen use the `git push` command followed by the name of the branch you want to push the changes to. This will upload the changes to the GitHub repository."
        }
      ]
    },
    {
      "LessonTitle": "Git para GitHub Workflow usando o Terminal",
      "Steps": [
        {
          "StepNumber": 1,
          "Description": "Criando um novo reposit√≥rio Git localmente",
          "Example": "git init my-new-project",
          "Explanation": "Para come√ßar a usar Git para um novo projeto, voc√™ precisa criar um novo reposit√≥rio Git. Voc√™ pode fazer isso navegando at√© o diret√≥rio do seu projeto no terminal e executando o comando `git init`."
        },
        {
          "StepNumber": 2,
          "Description": "Adicionando arquivos ao reposit√≥rio Git",
          "Example": "git add .\ngit commit -m 'commit inicial'",
          "Explanation": "Para adicionar arquivos ao reposit√≥rio Git, use o comando `git add` seguido pelos nomes de arquivos ou `. para adicionar todos os arquivos no diret√≥rio. Em seguida, use o comando `git commit` para criar um novo commit com uma mensagem descrevendo as altera√ß√µes que voc√™ fez."
        },
        {
          "StepNumber": 3,
          "Description": "Criando um novo reposit√≥rio do GitHub",
          "Example": "",
          "Explanation": "Para criar um novo reposit√≥rio GitHub, acesse a sua conta do GitHub e clique no bot√£o 'Novo reposit√≥rio'. Voc√™ ser√° solicitado a fornecer um nome de reposit√≥rio, uma descri√ß√£o e selecionar a visibilidade do reposit√≥rio (p√∫blico ou privado)."
        },
        {
          "StepNumber": 4,
          "Description": "Adicionando o reposit√≥rio do GitHub como um remoto",
          "Example": "git remote add origem https://github.com/user/repo.git",
          "Explanation": "Para vincular o reposit√≥rio Git local ao reposit√≥rio GitHub, voc√™ precisa adicionar o reposit√≥rio do GitHub como um controle remoto no Git. Voc√™ pode fazer isso usando o comando `git remote add` seguido pelo nome que voc√™ quer dar ao controle remoto (tipicamente `origin`) e o URL do reposit√≥rio do GitHub."
        },
        {
          "StepNumber": 5,
          "Description": "Enviando as altera√ß√µes para o reposit√≥rio do GitHub",
          "Example": "git push -u master origin",
          "Explanation": "Para fazer push das altera√ß√µes no reposit√≥rio Git local para o reposit√≥rio GitHub, use o comando `git push` seguido pelo nome do controle remoto (`origin`) e o branch para o qual voc√™ quer fazer push das altera√ß√µes (`master`). A op√ß√£o `-u` define o controle remoto e branch como o padr√£o para os futuros comandos `git push`."
        }
      ]
    }
  ]
}