{
  "gitCommands": [
    {
      "name": "Инициализировать репозиторий",
      "command": "git init [directory]",
      "description": "Инициализировать новый Git-репозиторий в текущем или указанном каталоге.",
      "example": "git init my_project"
    },
    {
      "name": "Клонировать репозиторий",
      "command": "git clone [repository_url] [directory]",
      "description": "Клонировать существующий Git репозиторий в новый каталог на локальной машине.",
      "example": "git clone https://github.com/user/repo.git my_repo"
    },
    {
      "name": "Добавить файлы",
      "command": "git add [file(s)]",
      "description": "Добавьте файлы в область отладки Git, готово к коммиту.",
      "example": "git add file1.txt file2.txt"
    },
    {
      "name": "Зафиксировать изменения",
      "command": "git commit -m [message]",
      "description": "Сохранить изменения, внесенные в Git-репозиторий в историю с указанным сообщением коммита.",
      "example": "git commit -m 'Добавление важных файлов'"
    },
    {
      "name": "Отправить изменения",
      "command": "git push [remote_name] [branch_name]",
      "description": "Отправить зафиксированные изменения в удаленный репозиторий.",
      "example": "git push origin master"
    },
    {
      "name": "Потянуть изменения",
      "command": "git pull [remote_name] [branch_name]",
      "description": "Получить изменения из удаленного репозитория и объединить их с локальным репозиторием.",
      "example": "git pull origin master"
    },
    {
      "name": "Проверить статус",
      "command": "git status",
      "description": "Проверьте статус Git-репозитория и просмотрите изменения, которые еще не были приняты.",
      "example": "git status"
    },
    {
      "name": "Просмотр истории изменений",
      "command": "git log",
      "description": "Просмотр истории коммитов в Git репозитории.",
      "example": "журнал git"
    },
    {
      "name": "Создать ветку",
      "command": "git branch [branch_name]",
      "description": "Создать новую ветку в Git-репозитории.",
      "example": "git branch new_feature"
    },
    {
      "name": "Переключить на ветку",
      "command": "git checkout [branch_name]",
      "description": "Переключиться на другую ветку в Git-репозитории.",
      "example": "git checkout new_feature"
    },
    {
      "name": "Сравнить ветки",
      "command": "diff git [branch1] [branch2]",
      "description": "Сравните различия между двумя ветками репозитория Git.",
      "example": "git master new_feature diff"
    },
    {
      "name": "Объединить ветки",
      "command": "git merge [branch_name]",
      "description": "Объединить изменения из указанной ветки в текущую ветку в Git-репозитории.",
      "example": "git merge new_feature"
    },
    {
      "name": "Переименовать ветку",
      "command": "git branch -m [new_branch_name]",
      "description": "Переименовать текущую ветку в Git-репозитории.",
      "example": "git ветка -m обновлена"
    },
    {
      "name": "Удалить ветку",
      "command": "git branch -d [branch_name]",
      "description": "Удалить ветку в Git-репозитории.",
      "example": "git branch -d outdated_feature"
    },
    {
      "name": "Сбросить изменения",
      "command": "git reset [file]",
      "description": "Сброс сделанных изменений в файл в Git-репозитории.",
      "example": "git reset file1.txt"
    },
    {
      "name": "Отменить коммит",
      "command": "git revert [commit_hash]",
      "description": "Отменить изменение коммита в Git репозитории.",
      "example": "git revert abc123"
    },
    {
      "name": "Отметить коммит",
      "command": "git tag [tag_name] [commit_hash]",
      "description": "Добавить тег для определенного коммита в Git-репозиторий.",
      "example": "git tag v1.0 abc123"
    },
    {
      "name": "Тайник изменения",
      "command": "git stash",
      "description": "Временно сохранить изменения, внесенные в Git-репозиторий без изменений.",
      "example": "git stash"
    },
    {
      "name": "Применить изменения с тайником",
      "command": "git stash apply",
      "description": "Применить изменения, которые были закрыты в Git-репозитории.",
      "example": "Применение git stash"
    },
    {
      "name": "Список с тайником изменений",
      "command": "git stash list",
      "description": "Список всех устаревших изменений в Git репозитории.",
      "example": "список тайников git"
    },
    {
      "name": "Удалить кэшированные изменения",
      "command": "git stash drop",
      "description": "Удалить устаревшие изменения из Git репозитория.",
      "example": "капля сгиба"
    },
    {
      "name": "Показать журнал коммитов",
      "command": "журнал git",
      "description": "Показать историю фиксации репозитория Git.",
      "example": "журнал git"
    },
    {
      "name": "Показать коммиты",
      "command": "git show [commit_hash]",
      "description": "Показать различия конкретного коммита в Git репозитории.",
      "example": "git show abc123"
    },
    {
      "name": "Получить удаленные изменения",
      "command": "git fetch",
      "description": "Получить обновления из удаленного репозитория в локальный репозиторий.",
      "example": "загрузить git"
    },
    {
      "name": "Пульт Пульт изменений",
      "command": "git pull",
      "description": "Получить и объединить обновления из удаленного репозитория в локальный репозиторий.",
      "example": "git pull"
    },
    {
      "name": "Отправить локальные изменения",
      "command": "git push [remote_name] [branch_name]",
      "description": "Отправить локальные изменения в удаленный репозиторий.",
      "example": "git push new_feature"
    },
    {
      "name": "Добавить удаленный репозиторий",
      "command": "git remote add [remote_name] [remote_url]",
      "description": "Добавить удаленный репозиторий в локальный репозиторий.",
      "example": "git remote add upstream https://github.com/upstream_repo.git"
    },
    {
      "name": "Удалить удаленный репозиторий",
      "command": "git remote remove [remote_name]",
      "description": "Удалить удаленный репозиторий из локального репозитория.",
      "example": "git remote remove upstream"
    },
    {
      "name": "Показать удаленные репозитории",
      "command": "git remote show [remote_name]",
      "description": "Показать информацию о удаленном репозитории в локальном репозитории.",
      "example": "git remote show origin"
    },
    {
      "name": "Git Rebase",
      "command": "git rebase [options] [--onto newbase] [upstream [branch]]",
      "description": "Перепишите историю коммитов, перемещая коммиты из одной ветки в другую.",
      "example": "git rebase master"
    },
    {
      "name": "Git Cherry-pick",
      "command": "git cherry-pick [options] <commit>",
      "description": "Применить изменения, внесенные некоторыми существующими коммитами.",
      "example": "git cherry-pick abcd123"
    },
    {
      "name": "Git Bisect",
      "command": "git bisect [start] [end]",
      "description": "Найти коммит в диапазоне с помощью бинарного поиска.",
      "example": "git bisect start HEAD HEAD~10"
    },
    {
      "name": "Временно сохранить",
      "command": "git stash [save | push] [-p|--patch] [-k|--keep-index] [-u|--include-untracked] [-a|--all] [-q|--quiet] [<message>]",
      "description": "Временно сохранить изменения, которые еще не готовы к завершению.",
      "example": "git stash save \"work in progress\""
    },
    {
      "name": "Git Подмодуль",
      "command": "git submodule [options] [submodule]",
      "description": "Управление дочерними репозиториями в вашем основном Git репозитории.",
      "example": "git submodule update --init"
    },
    {
      "name": "Журнал ссылок",
      "command": "git reflog [options] [show]",
      "description": "Просмотр журнала всех ссылок Git в вашем хранилище, даже если они были удалены или утеряны.",
      "example": "git reflog show HEAD"
    },
    {
      "name": "Коммуникационные коммиты",
      "command": "git rebase -i HEAD~[количество коммитов в squash]",
      "description": "Объединяет несколько коммитов в один коммит",
      "example": "rebase git -i HEAD~3"
    },
    {
      "name": "Показать журнал изменений",
      "command": "git reflog",
      "description": "Отображает журнал изменений в HEAD репозитория",
      "example": "git reflog"
    },
    {
      "name": "Сравнить коммиты",
      "command": "git diff [commit A]..[commit B]",
      "description": "Показывает различия между двумя коммитами",
      "example": "diff git abc123..def456"
    },
    {
      "name": "Конфигурация Git",
      "command": "git config [option]",
      "description": "Настройка Git настроек",
      "example": "git config --global user.name 'Ваше имя'"
    },
    {
      "name": "Удалить файлы",
      "command": "git rm [file]",
      "description": "Удаляет файл из репозитория",
      "example": "git rm example.txt"
    },
    {
      "name": "Зафиксировать тег",
      "command": "git tag [tag name]",
      "description": "Добавляет тег к определенному коммиту",
      "example": "git tag v1.0.0"
    },
    {
      "name": "Восстановить предыдущие коммиты",
      "command": "git checkout [commit]",
      "description": "Переключает на предыдущий коммит и восстанавливает состояние репозитория",
      "example": "git checkout abc123"
    },
    {
      "name": "Переключиться на ветку",
      "command": "git switch <branch_name>",
      "description": "Переключает в указанную ветку.",
      "example": "git switch feature_branch"
    },
    {
      "name": "Создать и переключиться на новую ветку",
      "command": "git switch -c <new_branch_name>",
      "description": "Создает и переключает на новую ветку с указанным именем.",
      "example": "git switch -c new_feature_branch"
    },
    {
      "name": "Принудительно переключиться на ветку",
      "command": "переключатель git -C <branch_name>",
      "description": "Переключение на указанную ветку, отмена локальных изменений.",
      "example": "git switch -C feature_branch"
    }
  ]
}